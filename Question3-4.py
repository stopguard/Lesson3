"""
Написать функцию thesaurus_adv(), принимающую в качестве аргументов строки в формате «Имя Фамилия» и
возвращающую словарь, в котором ключи — первые буквы фамилий, а значения — словари, в котором ключи — первые буквы имён,
и содержащие записи, в которых фамилия начинается с соответствующей буквы.
"""
# вводим список имён фамилий
name_list = ["Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева"]


def thesaurus_adv(names):
    """Преобразует список names в упорядоченный словарь вида:
    {первая буква фамилии: {первая буква имени: [список имён фамилий на буквы из ключей словаря]}}"""
    _forenames = []                                 # объявляем список имён
    _surnames = []                                  # объявляем список фамилий
    _sum_names = []                                 # список для сортированных имён фамилий
    for name in names:                              # проходим по полученному в функцию списку имён фамилий
        _forenames.append(name.split()[0])              # накапливаем имена в списке
        _surnames.append(name.split()[1])               # накапливаем фамилии в списке
    for s, f in sorted(zip(_surnames, _forenames)):  # возвращаем отсортированные по фамилии > имени пары
        _sum_names.append(f'{f} {s}')                   # и добавляем их в список сортированных имён фамилий
    name_dict = {}                                  # объявляем словарь для ответа
    for name in _sum_names:                         # проходим по элементам списка
        forename, surname = name.split()                # разбиваем элемент на имя и фамилию
        if name_dict.get(surname[0]):                       # если первая буква фамилии в словаре
            if name_dict[surname[0]].get(forename[0]):          # если первая буква имени в словаре фамилии
                name_dict[surname[0]][forename[0]].append(name)     # добавляем в список имя/фамилию
            else:                                               # если первая буква имени не в словаре фамилии
                name_dict[surname[0]][forename[0]] = [name]         # добавляем ключ первой буквы им и знач списка с им
        else:                                               # если первой буквы фамилии в словаре нет
            name_dict[surname[0]] = {forename[0]: [name]}       # добавляем ее ключ со значением словаря из буквы имени
    return name_dict  # возвращаем полученный словарь           # и списком с именем/фамилией


namer = thesaurus_adv(name_list[:])     # передаём в функцию список имён/фамилий
print(*namer.items(), sep='\n')         # распаковываем его для удобного вывода
